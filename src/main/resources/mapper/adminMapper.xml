<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wyj.books.mapper.AdminMapper" >
    <resultMap id="BaseResultMap" type="com.wyj.books.entity.Admin" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="adminName" property="adminname" jdbcType="VARCHAR" />
        <result column="adminPassword" property="adminpassword" jdbcType="VARCHAR" />
        <result column="adminPhone" property="adminphone" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, adminname, adminpassword, adminphone
    </sql>
    <select id="selectByAdminName" resultType="com.wyj.books.entity.Admin" parameterType="java.lang.String">
        SELECT *
        FROM admin
        WHERE adminname = #{adminName}
    </select>

    <select id="getAdminRolePer" resultType="com.wyj.books.entity.AdminRolePer">
        select *
        from admin
        INNER JOIN admin_role ON admin.id = admin_role.adminId
        INNER JOIN role ON admin_role.roleId = role.roleid
        <where>
            1 = 1
            <if test="searchStr !=null and searchStr !=''">
                and concat(id,adminname,adminphone) LIKE concat ('%', #{searchStr},'%')
            </if>
        </where>
        order by admin.id asc
    </select>

    <select id="getAdminByPhone" resultType="com.wyj.books.entity.Admin" parameterType="java.lang.String">
        select * from admin
        where adminphone = #{adminphone}
    </select>

    <update id="updateAdmin" parameterType="com.wyj.books.entity.Admin">
        update admin
        <set>
            <if test="adminname != null">
                adminname = #{adminname},
            </if>
            <if test="adminpassword != null">
                adminpassword = #{adminpassword},
            </if>
            <if test="adminphone != null">
                adminphone = #{adminphone},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateAdminRole" parameterType="java.lang.Integer">
        update admin_role
        set roleId = #{roleId}
        where adminId = #{adminId}
    </update>

    <insert id="insertAdmin" parameterType="com.wyj.books.entity.Admin">
    insert into admin (adminname,adminpassword,adminphone)
    values (#{adminName},#{adminPassword},#{adminPhone})
    </insert>

    <insert id="insertAdminRole" parameterType="java.lang.Integer">
    insert into admin_role (adminId,roleId)
    values (#{adminId},#{roleId})
    </insert>

    <delete id="deleteAdmin" parameterType="java.lang.Integer">
        delete FROM admin where id = #{id}
        delete from admin_role where adminId = #{adminId}
    </delete>

</mapper>